name: MyV

on:
  pull_request:
    types: [closed]
  workflow_dispatch:

jobs:
  deploy:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'dev'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.PROJECT_NAME }} .

      - name: Save Docker image to tar
        run: |
          docker save ${{ secrets.PROJECT_NAME }} > app.tar

      - name: Upload image to EC2 and run container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker stop ${{ secrets.PROJECT_NAME }} || true
            docker rm ${{ secrets.PROJECT_NAME }} || true
            docker rmi ${{ secrets.PROJECT_NAME }} || true
            rm -f app.tar

      - name: Copy image to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "app.tar"
          target: "~/"

      - name: Run Docker container on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker load < app.tar
            docker run -d --name ${{ secrets.PROJECT_NAME }} -p 80:8080 ${{ secrets.PROJECT_NAME }}
